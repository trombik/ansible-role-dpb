---
# tasks file for ansible-role-dpb

- include_vars: "{{ ansible_os_family }}.yml"

- name: Assert that dpb_cvsroot is defined
  assert:
    msg: dpb_cvsroot must not be empty
    that:
      - dpb_cvsroot is defined
      - dpb_cvsroot | length > 0

- name: Assert that dpb_proot_chroot is defined
  assert:
    msg: dpb_proot_chroot must not be empty
    that:
      - dpb_proot_chroot is defined
      - dpb_proot_chroot | length > 0

- name: Get release version
  # XXX like any other facts, ansible_distribution_release has never been
  # officially defined. its definition varies on platforms. the command below,
  # taaken from the OpenBSD FAQ to get version is clear to everyone and will
  # not break
  command: uname -r
  register: register_release_version
  changed_when: false

- name: Set dpb_release variable
  set_fact:
    dpb_release: "{{ register_release_version.stdout }}"

- name: Get release in short form
  shell: uname -r | cut -c 1,3
  register: register_release_version_short
  changed_when: false

- name: Set dpb_release_short variable
  set_fact:
    dpb_release_short: "{{ register_release_version_short.stdout }}"

- name: Get machine processor architecture
  command: uname -m
  register: register_arch
  changed_when: false

- name: Set dpb_arch variable
  set_fact:
    dpb_arch: "{{ register_arch.stdout }}"

- name: Set dpb_cvs_tag_default
  set_fact:
    dpb_cvs_tag_default: "OPENBSD_{{ dpb_release.split('.') | join('_') }}"

- name: Set dpb_cvs_tag_merged
  set_fact:
    dpb_cvs_tag_merged: "{% if dpb_cvs_tag is defined and dpb_cvs_tag | length > 0 %}{{ dpb_cvs_tag }}{% else %}{{ dpb_cvs_tag_default }}{% endif %}"

- name: Assert that dpb_cvs_tag_merged is defined
  assert:
    msg: "[BUG] dpb_cvs_tag_merged is empty"
    that:
      - dpb_cvs_tag_merged is defined
      - dpb_cvs_tag_merged | length > 0

- name: Set dpb_cache_release_dir
  set_fact:
    dpb_cache_release_dir: "{{ dpb_cache_directory }}/{{ dpb_release }}"

- name: dpb_cache_sets_dir
  set_fact:
    dpb_cache_sets_dir: "{{ dpb_cache_release_dir }}/{{ dpb_arch }}"

- name: Include install-ansible_os_family.yml
  include: "install-{{ ansible_os_family }}.yml"

- name: Create dpb_proot_chroot
  file:
    path: "{{ dpb_proot_chroot }}"
    state: directory

- name: Include remove_nodev.yml if dpb_remove_nodev_mount_option is defined
  include: "remove_nodev.yml"
  when:
    - dpb_remove_nodev_mount_option

- name: Create dpb_conf_dir
  file:
    path: "{{ dpb_conf_dir }}"
    state: directory

- name: Create package list to build
  template:
    src: packages.dpb.j2
    dest: "{{ dpb_conf_file }}"

- name: Create proot.conf
  template:
    src: proot.conf.j2
    dest: "{{ dpb_proot_conf_file }}"
  notify:
    - Update chroot
